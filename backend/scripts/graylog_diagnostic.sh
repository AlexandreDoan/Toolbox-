#!/bin/bash
# Script de diagnostic complet pour Graylog + Elasticsearch

echo "üîç DIAGNOSTIC GRAYLOG/ELASTICSEARCH"
echo "=================================="

# 1. √âtat des conteneurs
echo "üì¶ √âtat des conteneurs:"
docker-compose ps | grep -E "(graylog|elasticsearch|mongo)"

echo ""
echo "üîó Connectivit√© r√©seau:"
docker exec toolbox-graylog ping -c 2 elasticsearch 2>/dev/null || echo "‚ùå Graylog ne peut pas ping Elasticsearch"
docker exec toolbox-elasticsearch curl -s localhost:9200 >/dev/null && echo "‚úÖ Elasticsearch r√©pond" || echo "‚ùå Elasticsearch ne r√©pond pas"

# 2. V√©rifier Elasticsearch
echo ""
echo "üîç √âtat Elasticsearch:"
ES_HEALTH=$(curl -s "localhost:9200/_cluster/health" 2>/dev/null)
if [ $? -eq 0 ]; then
    echo "‚úÖ Elasticsearch accessible"
    echo "Cluster Health: $(echo $ES_HEALTH | grep -o '"status":"[^"]*' | cut -d'"' -f4)"
else
    echo "‚ùå Elasticsearch inaccessible"
fi

# 3. Lister les index
echo ""
echo "üìã Index Elasticsearch:"
curl -s "localhost:9200/_cat/indices?v" 2>/dev/null || echo "‚ùå Impossible de lister les index"

# 4. V√©rifier la configuration Graylog
echo ""
echo "‚öôÔ∏è Configuration Graylog:"
docker exec toolbox-graylog cat /usr/share/graylog/data/config/graylog.conf 2>/dev/null | grep -E "(elasticsearch|mongodb)" || echo "‚ùå Config Graylog inaccessible"

# 5. Logs r√©cents
echo ""
echo "üìÑ Logs r√©cents Graylog (erreurs):"
docker-compose logs graylog 2>/dev/null | tail -20 | grep -i "error\|exception\|failed" || echo "Pas d'erreurs r√©centes trouv√©es"

echo ""
echo "üìÑ Logs r√©cents Elasticsearch (erreurs):"
docker-compose logs elasticsearch 2>/dev/null | tail -20 | grep -i "error\|exception\|failed" || echo "Pas d'erreurs r√©centes trouv√©es"

# 6. Test de cr√©ation d'index manuel
echo ""
echo "üß™ Test cr√©ation d'index manuel:"
INDEX_RESPONSE=$(curl -s -X PUT "localhost:9200/test-index" -H 'Content-Type: application/json' -d'
{
  "settings": {
    "number_of_shards": 1,
    "number_of_replicas": 0
  }
}' 2>/dev/null)

if echo "$INDEX_RESPONSE" | grep -q "acknowledged"; then
    echo "‚úÖ Cr√©ation d'index test r√©ussie"
    curl -s -X DELETE "localhost:9200/test-index" >/dev/null 2>&1
else
    echo "‚ùå √âchec cr√©ation d'index test"
    echo "R√©ponse: $INDEX_RESPONSE"
fi

# 7. V√©rifier les volumes et permissions
echo ""
echo "üíæ Volumes et permissions:"
docker exec toolbox-elasticsearch ls -la /usr/share/elasticsearch/data 2>/dev/null | head -5 || echo "‚ùå Volume Elasticsearch inaccessible"
docker exec toolbox-mongo ls -la /data/db 2>/dev/null | head -3 || echo "‚ùå Volume MongoDB inaccessible"

# 8. M√©moire et ressources
echo ""
echo "üíª Ressources syst√®me:"
docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}" | grep -E "(elasticsearch|graylog|mongo)"

echo ""
echo "üéØ RECOMMANDATIONS:"
echo "=================="

# Analyser les r√©sultats et donner des recommandations
if ! curl -s "localhost:9200/_cluster/health" >/dev/null 2>&1; then
    echo "‚ùå PROBL√àME: Elasticsearch n'est pas accessible"
    echo "   Solutions:"
    echo "   1. docker-compose restart elasticsearch"
    echo "   2. V√©rifier les logs: docker-compose logs elasticsearch"
    echo "   3. Augmenter la m√©moire si n√©cessaire"
fi

if ! docker exec toolbox-graylog ping -c 1 elasticsearch >/dev/null 2>&1; then
    echo "‚ùå PROBL√àME: Graylog ne peut pas contacter Elasticsearch"
    echo "   Solutions:"
    echo "   1. V√©rifier le r√©seau Docker: docker network ls"
    echo "   2. Red√©marrer les services: docker-compose restart"
fi

INDEX_COUNT=$(curl -s "localhost:9200/_cat/indices" 2>/dev/null | wc -l)
if [ "$INDEX_COUNT" -eq 0 ]; then
    echo "‚ö†Ô∏è PROBL√àME: Aucun index Graylog trouv√©"
    echo "   Solutions:"
    echo "   1. Forcer la cr√©ation: python test_gelf_logs.py"
    echo "   2. Red√©marrer Graylog: docker-compose restart graylog"
    echo "   3. V√©rifier les inputs dans l'interface Graylog"
fi

echo ""
echo "üîß COMMANDES DE R√âPARATION RAPIDE:"
echo "================================="
echo "# Red√©marrage complet de la stack logs:"
echo "docker-compose restart elasticsearch mongo graylog"
echo ""
echo "# Nettoyage et red√©marrage:"
echo "docker-compose down"
echo "docker system prune -f"
echo "docker-compose up -d"
echo ""
echo "# Forcer cr√©ation d'index:"
echo "python test_gelf_logs.py"
